// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workshop.GraphQL.Server.Data;

#nullable disable

namespace Workshop.GraphQL.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251021182538_AddEmployeeFields")]
    partial class AddEmployeeFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Workshop.GraphQL.Server.Data.Entities.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Implement GraphQL"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Write Docs"
                        });
                });

            modelBuilder.Entity("Workshop.GraphQL.Server.Data.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = 2,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sales"
                        });
                });

            modelBuilder.Entity("Workshop.GraphQL.Server.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("BirthOfPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            AssignmentId = 1,
                            BirthOfPlace = "New York",
                            Country = "USA",
                            DepartmentId = 1,
                            Hobbies = "[\"Reading\",\"Hiking\"]",
                            Name = "Alice",
                            Telephonenumber = "555-1234",
                            Zipcode = "12345"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave",
                            BirthOfPlace = "Chicago",
                            Country = "USA",
                            DepartmentId = 2,
                            Hobbies = "[\"Gaming\"]",
                            Name = "Bob",
                            Telephonenumber = "555-5678",
                            Zipcode = "67890"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Ln",
                            AssignmentId = 2,
                            BirthOfPlace = "San Francisco",
                            Country = "USA",
                            DepartmentId = 3,
                            Hobbies = "[\"Skiing\",\"Cooking\"]",
                            Name = "Charlie",
                            Telephonenumber = "555-9012",
                            Zipcode = "10112"
                        });
                });

            modelBuilder.Entity("Workshop.GraphQL.Server.Data.Entities.Employee", b =>
                {
                    b.HasOne("Workshop.GraphQL.Server.Data.Entities.Assignment", "Assignment")
                        .WithMany("Employees")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Workshop.GraphQL.Server.Data.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Workshop.GraphQL.Server.Data.Entities.Assignment", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Workshop.GraphQL.Server.Data.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
